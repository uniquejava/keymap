
# Unset existing commands
'body':
  'ctrl-o': 'core:nop'
  'cmd-o': 'core:nop'

'.platform-darwin':
  'cmd-1': 'tree-view:toggle'

'.platform-darwin .tree-view':
  'cmd-1': 'tree-view:toggle'

# Common keybindings (all platforms)
'atom-workspace atom-text-editor:not([mini])':
  'cmd-shift-f': 'editor:auto-indent'
  'alt-/': 'autocomplete-plus:activate'
  'alt-up': 'editor:move-line-up'
  'alt-down': 'editor:move-line-down'
  'alt-shift-up': 'bracket-matcher:select-inside-brackets'
  'shift-enter': 'editor:newline-below'
  'cmd-shift-enter': 'custom:colonize';


# Mac keybindings
'.platform-darwin atom-text-editor:not([mini])':
  'cmd-d': 'editor:delete-line'
  'cmd-l': 'go-to-line:toggle'
  'cmd-alt-down': 'editor:duplicate-lines'
  'cmd-alt-j': 'editor:join-lines'
  'cmd-o': 'symbols-view:toggle-file-symbols'
  'cmd-X': 'editor:upper-case'
  'cmd-Y': 'editor:lower-case'
  'cmd-shift-p': 'bracket-matcher:go-to-matching-bracket'
  'cmd-shift-c': 'editor:toggle-line-comments'

'.platform-darwin atom-workspace':
  'cmd-R': 'fuzzy-finder:toggle-file-finder'
  'cmd-e': 'fuzzy-finder:toggle-buffer-finder'
  'cmd-f': 'find-and-replace:toggle'
  'ctrl-h': 'project-find:toggle'
  'cmd-S': 'window:save-all'
  'cmd-3': 'command-palette:toggle'

# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
